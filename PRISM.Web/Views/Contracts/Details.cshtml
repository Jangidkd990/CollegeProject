@model PRISM.Core.Entities.Contract.Contract

@{
    ViewData["Title"] = "Contract Details";
}

<div class="container-fluid">
    <h1 class="mt-4">Contract Details</h1>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-action="Index">Contracts</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.ContractNumber</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-file-contract me-1"></i>
                        Contract #@Model.ContractNumber
                        @if (Model.IsActive)
                        {
                            <span class="badge bg-success ms-2">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-danger ms-2">Inactive</span>
                        }
                    </div>
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger btn-sm">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                        <a asp-action="Index" class="btn btn-secondary btn-sm">
                            <i class="fas fa-list"></i> Back to List
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Contract Type</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.ContractType)</dd>
                                
                                @if (Model.ContractType == PRISM.Core.Enums.ContractType.Customer)
                                {
                                    <dt class="col-sm-4">Customer</dt>
                                    @if (Model.Customer != null)
                                    {
                                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Customer.Name)</dd>
                                    }
                                    else
                                    {
                                        <dd class="col-sm-8">Unknown Customer</dd>
                                    }
                                }
                                else
                                {
                                    <dt class="col-sm-4">Supplier</dt>
                                    @if (Model.Supplier != null)
                                    {
                                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Supplier.Name)</dd>
                                    }
                                    else
                                    {
                                        <dd class="col-sm-8">Unknown Supplier</dd>
                                    }
                                }
                                
                                <dt class="col-sm-4">Start Date</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.StartDate)</dd>
                                
                                <dt class="col-sm-4">End Date</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.EndDate)</dd>
                                
                                <dt class="col-sm-4">Base Quantity</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.BaseQuantity)</dd>
                                
                                <dt class="col-sm-4">Min Quantity</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.MinQuantity)</dd>
                                
                                <dt class="col-sm-4">Max Quantity</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.MaxQuantity)</dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Pricing Type</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.PricingType)</dd>
                                
                                @if (Model.PricingType == PRISM.Core.Enums.PricingType.FlatRate)
                                {
                                    <dt class="col-sm-4">Fixed Price</dt>
                                    <dd class="col-sm-8">@Html.DisplayFor(model => model.FixedPrice)</dd>
                                }
                                
                                @if (Model.PricingType == PRISM.Core.Enums.PricingType.FixedEscalation)
                                {
                                    <dt class="col-sm-4">Fixed Price</dt>
                                    <dd class="col-sm-8">@Html.DisplayFor(model => model.FixedPrice)</dd>
                                    
                                    <dt class="col-sm-4">Escalation Rate</dt>
                                    <dd class="col-sm-8">@(Model.FixedEscalationRate?.ToString("P2"))</dd>
                                }
                                
                                <dt class="col-sm-4">Has Deferral Option</dt>
                                <dd class="col-sm-8">
                                    @if (Model.HasDeferralOption)
                                    {
                                        <span class="badge bg-success">Yes</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">No</span>
                                    }
                                </dd>
                                
                                <dt class="col-sm-4">Borrowing Allowed</dt>
                                <dd class="col-sm-8">
                                    @if (Model.IsBorrowingAllowed)
                                    {
                                        <span class="badge bg-success">Yes</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">No</span>
                                    }
                                </dd>
                                
                                <dt class="col-sm-4">Created By</dt>
                                <dd class="col-sm-8">@Model.CreatedBy on @Model.CreatedAt.ToString("g")</dd>
                                
                                @if (!string.IsNullOrEmpty(Model.ModifiedBy))
                                {
                                    <dt class="col-sm-4">Modified By</dt>
                                    <dd class="col-sm-8">@Model.ModifiedBy on @Model.ModifiedAt?.ToString("g")</dd>
                                }
                            </dl>
                        </div>
                    </div>
                    
                    <div class="row mt-3">
                        <div class="col-12">
                            <h5>Contract Terms</h5>
                            <p>@Html.DisplayFor(model => model.ContractTerms)</p>
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.DocumentPath))
                    {
                        <div class="row mt-3">
                            <div class="col-12">
                                <h5>Contract Document</h5>
                                <p><a href="@Model.DocumentPath" target="_blank">View Document</a></p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <!-- Delivery Schedule -->
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-truck me-1"></i>
                        Delivery Schedule
                    </div>
                    <div>
                        @if (Model.IsActive)
                        {
                            <a asp-action="AddDelivery" asp-route-contractId="@Model.Id" class="btn btn-primary btn-sm">
                                <i class="fas fa-plus"></i> Add Delivery
                            </a>
                        }
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Deliveries != null && Model.Deliveries.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover" id="deliveriesTable">
                                <thead>
                                    <tr>
                                        <th>Scheduled Date</th>
                                        <th>Quantity</th>
                                        <th>Forecasted Price</th>
                                        <th>Actual Price</th>
                                        <th>Status</th>
                                        <th>Location</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var delivery in Model.Deliveries.OrderBy(d => d.ScheduledDate))
                                    {
                                        <tr>
                                            <td>
                                                @delivery.ScheduledDate.ToString("d")
                                                @if (delivery.IsDeferred && delivery.DeferredToDate.HasValue)
                                                {
                                                    <br /><span class="text-danger">Deferred to: @delivery.DeferredToDate.Value.ToString("d")</span>
                                                }
                                            </td>
                                            <td>@delivery.Quantity</td>
                                            <td>@delivery.ForecastedPrice</td>
                                            <td>@delivery.ActualPrice</td>
                                            <td>
                                                @if (delivery.IsDeferred)
                                                {
                                                    <span class="badge bg-warning">Deferred</span>
                                                }
                                                else
                                                {
                                                    if (delivery.ScheduledDate <= DateTime.Today)
                                                    {
                                                        <span class="badge bg-success">Completed</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-info">Scheduled</span>
                                                    }
                                                }
                                            </td>
                                            <td>@(delivery.DeliveryLocation?.Name ?? "Not Specified")</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="EditDelivery" asp-route-id="@delivery.Id" class="btn btn-warning btn-sm">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-danger btn-sm" 
                                                            onclick="confirmDeleteDelivery(@delivery.Id)">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No deliveries scheduled for this contract.</p>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <!-- Borrowing History -->
    @if (Model.IsBorrowingAllowed)
    {
        <div class="row">
            <div class="col-md-12 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-exchange-alt me-1"></i>
                            Borrowing History
                        </div>
                        <div>
                            @if (Model.IsActive)
                            {
                                <a asp-action="AddBorrowing" asp-route-contractId="@Model.Id" class="btn btn-primary btn-sm">
                                    <i class="fas fa-plus"></i> Add Borrowing
                                </a>
                            }
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.Borrowings != null && Model.Borrowings.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover" id="borrowingsTable">
                                    <thead>
                                        <tr>
                                            <th>Borrow Date</th>
                                            <th>Borrowed Quantity</th>
                                            <th>Scheduled Repayment</th>
                                            <th>Actual Repayment</th>
                                            <th>Repaid Quantity</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var borrowing in Model.Borrowings.OrderByDescending(b => b.BorrowDate))
                                        {
                                            <tr>
                                                <td>@borrowing.BorrowDate.ToString("d")</td>
                                                <td>@borrowing.BorrowedQuantity</td>
                                                <td>@borrowing.ScheduledRepaymentDate.ToString("d")</td>
                                                <td>@(borrowing.ActualRepaymentDate?.ToString("d") ?? "-")</td>
                                                <td>@(borrowing.RepaidQuantity ?? 0)</td>
                                                <td>
                                                    @if (borrowing.IsRepaid)
                                                    {
                                                        <span class="badge bg-success">Repaid</span>
                                                    }
                                                    else if (borrowing.ScheduledRepaymentDate < DateTime.Today)
                                                    {
                                                        <span class="badge bg-danger">Overdue</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-warning">Outstanding</span>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <a asp-action="EditBorrowing" asp-route-id="@borrowing.Id" class="btn btn-warning btn-sm">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                        <button type="button" class="btn btn-danger btn-sm" 
                                                                onclick="confirmDeleteBorrowing(@borrowing.Id)">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">No borrowing history for this contract.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Delete Delivery Confirmation Modal -->
<div class="modal fade" id="deleteDeliveryModal" tabindex="-1" aria-labelledby="deleteDeliveryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteDeliveryModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this delivery?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteDeliveryForm" asp-action="DeleteDelivery" method="post">
                    <input type="hidden" id="deliveryIdToDelete" name="id" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Borrowing Confirmation Modal -->
<div class="modal fade" id="deleteBorrowingModal" tabindex="-1" aria-labelledby="deleteBorrowingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteBorrowingModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this borrowing record?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteBorrowingForm" asp-action="DeleteBorrowing" method="post">
                    <input type="hidden" id="borrowingIdToDelete" name="id" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#deliveriesTable').DataTable({
                responsive: true,
                order: [[0, 'asc']]
            });
            
            $('#borrowingsTable').DataTable({
                responsive: true,
                order: [[0, 'desc']]
            });
        });
        
        function confirmDeleteDelivery(id) {
            $('#deliveryIdToDelete').val(id);
            $('#deleteDeliveryModal').modal('show');
        }
        
        function confirmDeleteBorrowing(id) {
            $('#borrowingIdToDelete').val(id);
            $('#deleteBorrowingModal').modal('show');
        }
    </script>
} 