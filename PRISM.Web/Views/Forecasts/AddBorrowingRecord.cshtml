@model PRISM.Core.Entities.Forecasting.UF6BorrowingRecord

@{
    ViewData["Title"] = "Add UF6 Borrowing Record";
}

<div class="container-fluid">
    <h1 class="mt-4">Add UF6 Borrowing Record</h1>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-action="Index">Forecasts</a></li>
            <li class="breadcrumb-item"><a asp-action="BorrowingRecords">UF6 Borrowing Records</a></li>
            <li class="breadcrumb-item active" aria-current="page">Add Record</li>
        </ol>
    </nav>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-plus me-1"></i>
            Add New UF6 Borrowing Record
        </div>
        <div class="card-body">
            <form asp-action="AddBorrowingRecord">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="ContractId" class="form-label">Contract</label>
                            <select asp-for="ContractId" asp-items="ViewBag.Contracts" class="form-select">
                                <option value="">-- Select Contract --</option>
                            </select>
                            <span asp-validation-for="ContractId" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="CustomerId" class="form-label">Customer (Optional)</label>
                            <select asp-for="CustomerId" asp-items="ViewBag.Customers" class="form-select">
                                <option value="">-- None --</option>
                            </select>
                            <span asp-validation-for="CustomerId" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="TransactionType" class="form-label">Transaction Type</label>
                            <select asp-for="TransactionType" asp-items="ViewBag.TransactionTypes" class="form-select">
                                <option value="">-- Select Type --</option>
                            </select>
                            <span asp-validation-for="TransactionType" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="TransactionDate" class="form-label">Transaction Date</label>
                            <input asp-for="TransactionDate" class="form-control" type="date" />
                            <span asp-validation-for="TransactionDate" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Quantity" class="form-label">Quantity</label>
                            <input asp-for="Quantity" class="form-control" type="number" step="0.01" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Unit" class="form-label">Unit</label>
                            <input asp-for="Unit" class="form-control" />
                            <span asp-validation-for="Unit" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="DueDate" class="form-label">Due Date</label>
                            <input asp-for="DueDate" class="form-control" type="date" />
                            <span asp-validation-for="DueDate" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="RelatedRecordId" class="form-label">Related Record (Optional)</label>
                            <select asp-for="RelatedRecordId" class="form-select">
                                <option value="">-- None --</option>
                                <!-- This would be populated with AJAX based on the selected transaction type -->
                            </select>
                            <span asp-validation-for="RelatedRecordId" class="text-danger"></span>
                            <div class="form-text">For Repay or Defer transactions, select the related Borrow record</div>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">Notes</label>
                            <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Create Record
                    </button>
                    <a asp-action="BorrowingRecords" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Hide related record dropdown initially
            updateRelatedRecordsVisibility();
            
            // Show/hide related record dropdown based on transaction type
            $('#TransactionType').change(function() {
                updateRelatedRecordsVisibility();
            });
            
            function updateRelatedRecordsVisibility() {
                var transactionType = $('#TransactionType').val();
                var relatedRecordGroup = $('#RelatedRecordId').closest('.mb-3');
                
                if (transactionType == '1' || transactionType == '2') { // Repay or Defer
                    relatedRecordGroup.show();
                    loadRelatedRecords();
                } else {
                    relatedRecordGroup.hide();
                }
            }
            
            // Load related borrow records via AJAX
            function loadRelatedRecords() {
                var contractId = $('#ContractId').val();
                if (contractId) {
                    $.getJSON('/Forecasts/GetBorrowRecords', { contractId: contractId }, function(data) {
                        var dropdown = $('#RelatedRecordId');
                        dropdown.empty();
                        dropdown.append($('<option></option>').val('').text('-- None --'));
                        
                        $.each(data, function(index, item) {
                            dropdown.append(
                                $('<option></option>').val(item.id).text(
                                    'Borrow #' + item.id + ' - ' + 
                                    new Date(item.transactionDate).toLocaleDateString() + 
                                    ' - ' + item.quantity + ' ' + item.unit
                                )
                            );
                        });
                    });
                }
            }
            
            // Update related records when contract changes
            $('#ContractId').change(function() {
                if ($('#TransactionType').val() == '1' || $('#TransactionType').val() == '2') {
                    loadRelatedRecords();
                }
            });
        });
    </script>
} 